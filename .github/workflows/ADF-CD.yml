name: ADF Deployment

on:
  push:
    branches:
      - adf_publish
  workflow_dispatch:
    inputs:
      skipAzModuleInstallation:
        description: 'Skip Az module installation'
        required: false
        default: 'false'

jobs:
  # Build Check (Validates ARM Template)
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Az PowerShell module
        run: if('${{ inputs.skipAzModuleInstallation }}' -ne 'true') { Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force }
        shell: pwsh

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Validate ARM Template
        run: |
          az deployment group validate \
            --resource-group ${{ vars.AZURE_RG_DEV }} \
            --template-file ${{ vars.ARM_TEMPLATE_FILE }} \
            --parameters ${{ vars.ARM_TEMPLATE_PARAMETERS_FILE }}
  

 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage: ['DEV', 'UAT', 'PROD']
      fail-fast: true
      max-parallel: 1
    environment:
      name: ${{ matrix.stage }}

    env:
      AZURE_RG: ${{ vars[format('AZURE_RG_{0}', matrix.stage)] }}  # Dynamically reference environment variable

    steps:
      - uses: actions/checkout@v3

      - name: Set AZURE_RG environment variable
        run: echo "AZURE_RG=${{ vars[format('AZURE_RG_{0}', matrix.stage)] }}" >> $GITHUB_ENV

      - name: Debug AZURE_RG
        run: "echo 'Resolved AZURE_RG: $AZURE_RG'"


      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets[format('AZURE_CREDENTIALS_{0}', matrix.stage)] }}
          enable-AzPSSession: true
      
      - name: Deploy ADF ARM Templates ${{ matrix.stage }}
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.AZURE_RG }} # (6) your target ADF resource group name
          dataFactoryName: ${{ vars.ADF_FACTORYNAME}} # (7) your target ADF name
          armTemplateFile:  ${{ github.workspace }}/ARMTemplateForFactory.json # (8) ARM template file name ARMTemplateForFactory.json
          armTemplateParametersFile: ${{ github.workspace }}/ARMTemplateParametersForFactory.json # (9) ARM template parameters file name ARMTemplateParametersForFactory.json

  # Deploy Job (Runs after Build Check)
 #Enable Triggers
      - name: Run Post-deployment script
        shell: pwsh
        run: pwsh -command "./PrePostDeploymentScript.ps1 -armTemplate ${{ vars.ARM_TEMPLATE_FILE }} -ResourceGroupName ${{ vars.AZURE_RG }} -DataFactoryName ${{ vars.ADF_FACTORYNAME }} -predeployment $false -deleteDeployment $true"